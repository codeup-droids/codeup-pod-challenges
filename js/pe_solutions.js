//useful functions

function isEven(num) {
	if(isNaN(num)){
		return console.error("this num isNaN");
	}
	if (num % 2 ===0){
		return true;
	}
	return false;
}

function isOdd(num) {
	if(isNaN(num)){
		return console.error("this num isNaN");
	}
	if (num % 2 !==0){
		return true;
	}
	return false;
}



/*
Multiples of 3 and 5

Problem 1
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

source https://projecteuler.net/problem=1
*/

//function that takes a number
//the number has to be positive and grater than 0
//the function will count all the numbers between 1 and the given number
// the numbers that are multiples of 3 or 5 will be added together.

function multiplesOf3sAnd5s(num) {
	let x = 0;
	if (num <= 0) {
		return alert(num + " is not a valid number. Please enter an integer greater than 0");
	}

	for (let i = 1; i < num; i++) {
		if ((i % 3 === 0) || (i % 5 === 0)) {
			//console.log(("adding " + x + " and " + i));
			x += i;
			//console.log(("result " + x));;
		}
	}
	return x;
}

/*
* Even Fibonacci numbers

Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

source https://projecteuler.net/problem=2

Answer:
4613732

*/


// takes in a number
function evenFibonacciSum(num) {
// first lets create the sequence variables;
	let fibSeq= [];
	let a = 1;
	let b = 1;
	let c = 0;
	let sum = 0;
	// then we do the things
	for(let i = 1; i < num; i++){
		c = a+b;
		if(isEven(c)){
		sum += c;
			if (sum >= 4000000){
				return sum;
			}
		}
		a=b;
		b=c;
	}
	//fibSeq.forEach(function (item) {
	//	c+= item
	//});
	return sum;
}